options:
	version: 0.1
	enchantingMenuScreen: Enchanting
	enableQuickWorkbench: true

command /newenchant:
	permission: op
	trigger:
		enchantingTableUI(player, 1, 0)

on left click with crafting table:
	"{@enableQuickWorkbench}" = "true"
	open workbench view to player
		
on right click on enchanting table:
	cancel event
	loop all blocks in radius 2.5 around event-block:
		if loop-block contains bookshelf:
			add 1 to {_power}
	enchantingTableUI(player, 1, {_power})

function enchantingTableUI(p: player, n: number, power: number):
	{_n} = 1:
		open chest inventory with 6 rows named "{@enchantingMenuScreen}" to {_p}
	wait 1 tick
	set slot 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 17, 18, 20, 26, 27, 28, 29, 35, 36, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, and 53 of {_p}'s current inventory to gray stained glass pane named "&r"
	set slot 19 of {_p}'s current inventory to cyan stained glass pane named "&fPlace Item Above" with lore "&7Accepted Items:%nl%&9Armor, Swords, Bows,%nL%&9Tools, Shield, Fishing Rod,%nl%&9Elytra, Shears, Trident,%nl%&9Compass, Flint and Steel"
	set slot 37 of {_p}'s current inventory to bookshelf named "&dEnchanting Power: &f%{_power}+0%" with lore "%nl%&7Higher number, more%nl%&7enchantments avaliable.%nl%%nl%&8HINT: Bookshelves should%nl%&8be surrounding this table!"
	set slot 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 39, 40, 41, 42, and 43 of {_p}'s current inventory to gray dye named "&cNo Item" with lore "&7Place an item to reveal contents.%nl%&7Or re-place item in slot."
	{_n} = 2:
		set slot 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 39, 40, 41, 42, and 43 of {_p}'s current inventory to barrier named "&cInvalid Item" with lore "&7This item cannot be modified!"

on inventory click:
	if name of event-inventory is "{@enchantingMenuScreen}":
		"%click type%" contains "with shift":
			event-slot is not 10
			send "&cShift clicking is disabled!"
			cancel event
		loop all blocks in radius 2.5 around player's target block:
			if loop-block contains bookshelf:
				add 1 to {_power}
		event-slot = 10:
			event-inventory is not inventory of player
			cursor slot of player is any sword:
				wait 1 ticks
				enchantingTableSwordUI(player, {_power})
			else if cursor slot of player is any pickaxe:
				wait 1 ticks
				enchantingTablePickaxeUI(player, {_power})
			else if cursor slot of player is bow:
				wait 1 ticks
				enchantingTableBowUI(player, {_power})
			else if cursor slot of player is shield or elytra:
				wait 1 ticks
				enchantingTableOtherUI(player, {_power})
			else if cursor slot of player is flint and steel:
				wait 1 ticks
				enchantingTableOtherUI(player, {_power})
			else if cursor slot of player is shears:
				wait 1 ticks
				enchantingTableShearsUI(player, {_power})
			else if cursor slot of player is air:
				enchantingTableUI(player, 0, {_power})
			else:
				enchantingTableUI(player, 2, {_power})
		else:
			event-inventory is not inventory of player:
				cancel event
			event-slot = 12, 13, 14, 15, 16, 21, 22, 23 or 24:
				name of event-slot = "&eSharpness I":
					enchantItemUI({_power}, player, "sword", "sharpness", 1, 1, 3, "")
					stop
				name of event-slot = "&eSharpness II":
					enchantItemUI({_power}, player, "sword", "sharpness", 2, 2, 5, "")
					stop
				name of event-slot = "&eSharpness III":
					enchantItemUI({_power}, player, "sword", "sharpness", 3, 3, 7, "")
					stop
				name of event-slot = "&eSharpness IV":
					enchantItemUI({_power}, player, "sword", "sharpness", 4, 4, 9, "")
					stop
				name of event-slot = "&eSharpness V":
					enchantItemUI({_power}, player, "sword", "sharpness", 5, 5, 11, "")
					stop
				name of event-slot = "&eEfficiency I":
					enchantItemUI({_power}, player, "pickaxe", "efficiency", 1, 1, 4, "universalEnchantment")
					stop
				name of event-slot = "&eEfficiency II":
					enchantItemUI({_power}, player, "pickaxe", "efficiency", 2, 2, 6, "universalEnchantment")
					stop
				name of event-slot = "&eEfficiency III":
					enchantItemUI({_power}, player, "pickaxe", "efficiency", 3, 3, 8, "universalEnchantment")
					stop
				name of event-slot = "&eEfficiency IV":
					enchantItemUI({_power}, player, "pickaxe", "efficiency", 4, 4, 9, "universalEnchantment")
					stop
				name of event-slot = "&eEfficiency V":
					enchantItemUI({_power}, player, "pickaxe", "efficiency", 5, 5, 12, "universalEnchantment")
					stop
				name of event-slot = "&eUnbreaking I":
					enchantItemUI({_power}, player, "sword", "unbreaking", 1, 2, 3, "universalEnchantment")
					stop
				name of event-slot = "&eUnbreaking II":
					enchantItemUI({_power}, player, "sword", "unbreaking", 2, 3, 5, "universalEnchantment")
					stop
				name of event-slot = "&eUnbreaking III":
					enchantItemUI({_power}, player, "sword", "unbreaking", 3, 4, 7, "universalEnchantment")
					stop
				name of event-slot = "&eSilk Touch":
					enchantItemUI({_power}, player, "pickaxe", "silk touch", 1, 2, 3, "")
					stop
				name of event-slot = "&eMending":
					enchantItemUI({_power}, player, "sword", "mending", 1, 2, 5, "universalEnchantment")
					stop
				name of event-slot = "&eFire Aspect I":
					enchantItemUI({_power}, player, "sword", "fire aspect", 1, 1, 3, "")
					stop
				name of event-slot = "&eFire Aspect II":
					enchantItemUI({_power}, player, "sword", "fire aspect", 2, 3, 6, "")
					stop
				name of event-slot = "&eSilk Touch":
					enchantItemUI({_power}, player, "pickaxe", "silk touch", 1, 2, 3, "")
					stop
				name of event-slot = "&eKnockback I":
					enchantItemUI({_power}, player, "sword", "knockback", 1, 1, 2, "")
					stop
				name of event-slot = "&eKnockback II":
					enchantItemUI({_power}, player, "sword", "knockback", 2, 2, 3, "")
					stop
				name of event-slot = "&eFortune I":
					enchantItemUI({_power}, player, "pickaxe", "Fortune", 1, 3, 5, "")
					stop
				name of event-slot = "&eFortune II":
					enchantItemUI({_power}, player, "pickaxe", "Fortune", 2, 4, 8, "")
					stop
				name of event-slot = "&eFortune III":
					enchantItemUI({_power}, player, "pickaxe", "Fortune", 3, 5, 11, "")
					stop
				name of event-slot = "&eLooting I":
					enchantItemUI({_power}, player, "sword", "Looting", 1, 2, 2, "")
					stop
				name of event-slot = "&eLooting II":
					enchantItemUI({_power}, player, "sword", "Looting", 2, 3, 4, "")
					stop
				name of event-slot = "&eLooting III":
					enchantItemUI({_power}, player, "sword", "Looting", 3, 4, 6, "")
					stop
				name of event-slot = "&eSweeping Edge I":
					enchantItemUI({_power}, player, "sword", "sweeping edge", 1, 1, 2, "")
					stop
				name of event-slot = "&eSweeping Edge II":
					enchantItemUI({_power}, player, "sword", "sweeping edge", 2, 2, 3, "")
					stop
				name of event-slot = "&eSweeping Edge III":
					enchantItemUI({_power}, player, "sword", "sweeping edge", 3, 3, 4, "")
					stop
				name of event-slot = "&eSmite I":
					enchantItemUI({_power}, player, "sword", "smite", 1, 2, 2, "")
					stop
				name of event-slot = "&eSmite II":
					enchantItemUI({_power}, player, "sword", "smite", 2, 3, 3, "")
					stop
				name of event-slot = "&eSmite III":
					enchantItemUI({_power}, player, "sword", "smite", 3, 4, 4, "")
					stop
				name of event-slot = "&eSmite IV":
					enchantItemUI({_power}, player, "sword", "smite", 4, 5, 5, "")
					stop
				name of event-slot = "&eSmite V":
					enchantItemUI({_power}, player, "sword", "smite", 5, 8, 7, "")
					stop
				name of event-slot = "&eBane of Arthropods I":
					enchantItemUI({_power}, player, "sword", "Bane of Arthropods", 1, 2, 2, "")
					stop
				name of event-slot = "&eBane of Arthropods II":
					enchantItemUI({_power}, player, "sword", "Bane of Arthropods", 2, 3, 3, "")
					stop
				name of event-slot = "&eBane of Arthropods III":
					enchantItemUI({_power}, player, "sword", "Bane of Arthropods", 3, 4, 4, "")
					stop
				name of event-slot = "&eBane of Arthropods IV":
					enchantItemUI({_power}, player, "sword", "Bane of Arthropods", 4, 5, 5, "")
					stop
				name of event-slot = "&eBane of Arthropods V":
					enchantItemUI({_power}, player, "sword", "Bane of Arthropods", 5, 8, 7, "")
					stop
				name of event-slot = "&ePower I":
					enchantItemUI({_power}, player, "bow", "Power", 1, 1, 2, "")
					stop
				name of event-slot = "&ePower II":
					enchantItemUI({_power}, player, "bow", "Power", 2, 2, 3, "")
					stop
				name of event-slot = "&ePower III":
					enchantItemUI({_power}, player, "bow", "Power", 3, 3, 5, "")
					stop
				name of event-slot = "&ePower IV":
					enchantItemUI({_power}, player, "bow", "Power", 4, 4, 7, "")
					stop
				name of event-slot = "&ePower V":
					enchantItemUI({_power}, player, "bow", "Power", 5, 5, 9, "")
					stop
				name of event-slot = "&eFlame":
					enchantItemUI({_power}, player, "bow", "flame", 1, 2, 5, "")
					stop
				name of event-slot = "&ePunch I":
					enchantItemUI({_power}, player, "bow", "punch", 1, 1, 2, "")
					stop
				name of event-slot = "&ePunch II":
					enchantItemUI({_power}, player, "bow", "punch", 2, 2, 3, "")
					stop
				name of event-slot = "&eInfinite":
					enchantItemUI({_power}, player, "bow", "infinity", 1, 6, 8, "")
					stop
		
function enchantItemUI(power: number, p: player, type: text, enchant: text, level: number, lapis: number, xplevel: number, flags: text):
	{_flags} contain "enchantmentExp10":
		add 10 to {_level}
	{_flags} contain "enchantmentExp20":
		add 20 to {_level}
	{_flags} do not contain "bypassCostEnchantmentCheck":
		if amount of lapis lazuli in {_p}'s inventory is less than {_lapis}:
			send "&cNot enough lapis lazuli or levels!" to {_p}
			stop
		if level of {_p} is less than {_xplevel}:
			send "&cNot enough lapis lazuli or levels!" to {_p}
			stop
	{_flags} do not contain "universalEnchantment":
		"%slot 10 of {_p}'s current inventory%" contains "%{_type}%":
			enchant slot 10 of {_p}'s current inventory with "%{_enchant}% %{_level}%" parsed as enchantment type
		else:
			close {_p}'s inventory
			send "&cNice try, but you cannot enchant this item with %{_type}% enchantments." to {_p}
			stop
	else:
		enchant slot 10 of {_p}'s current inventory with "%{_enchant}% %{_level}%" parsed as enchantment type
	{_flags} do not contain "bypassCostEnchantmentCheck":
		remove {_lapis} of lapis lazuli from {_p}'s inventory
		reduce {_p}'s level by {_xplevel}
	slot 10 of {_p}'s current inventory = any pickaxe:
		enchantingTablePickaxeUI({_p}, {_power})
	else if slot 10 of {_p}'s current inventory = any sword:
		enchantingTableSwordUI({_p}, {_power})
	else if slot 10 of {_p}'s current inventory = bow:
		enchantingTableBowUI({_p}, {_power})
	else if slot 10 of {_p}'s current inventory = shield or elytra:
		enchantingTableOtherUI({_p}, {_power})
	else if slot 10 of {_p}'s current inventory = flint and steel:
		enchantingTableOtherUI({_p}, {_power})
	else if slot 10 of {_p}'s current inventory = shears:
		enchantingTableShearsUI({_p}, {_power})
	else:
		close {_p}'s inventory
		send "&cCannot find this enchanting gui... perhaps id is wrong?%nl%Contact admin for assistance." to {_p}
		stop
	play sound "block.enchantment_table.use" at volume 2 at pitch 1 to {_p}
	
on inventory close:
	if name of event-inventory is "{@enchantingMenuScreen}":
		set {_item} to slot 10 of player's current inventory
		give {_item} to player
